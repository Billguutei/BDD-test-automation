<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="nostro-service-1" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ssl" elementType="Argument">
            <stringProp name="Argument.name">ssl</stringProp>
            <stringProp name="Argument.value">${__P(serviceSsl)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="server" elementType="Argument">
            <stringProp name="Argument.name">server</stringProp>
            <stringProp name="Argument.value">${__P(serviceIp)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">${__P(servicePort)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="jwt" elementType="Argument">
            <stringProp name="Argument.name">jwt</stringProp>
            <stringProp name="Argument.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxOTM3OSIsInByb2R1Y3QiOiJJbnRlcm5hbCIsImRldmljZV9pZCI6IkludGVybmFsIiwiaXNzIjoiZWRnZSIsInR5cGUiOiJFbXBsb3llZSIsImJyYW5jaCI6IjUwMjgiLCJhdWQiOlsiYWNjb3VudC1zZXJ2aWNlLTEiLCJsaW1pdC1zZXJ2aWNlLTEiLCJlYmlsbGluZy1zZXJ2aWNlIiwidHJhbnNmZXItc2VydmljZS0xIiwiY3VzdG9tZXJzLXNlcnZpY2UtMSIsInJhdGUtc2VydmljZS0xIiwiY2F0YWxvZy1zZXJ2aWNlLTEiLCJzdGF0ZW1lbnQtc2VydmljZS0xIiwiZG9jdW1lbnQtc2VydmljZS0xIiwiaWRlbnRpdHktc2VydmljZS0xIiwieHlwLXNlcnZpY2UtMSIsImNhcmQtc3RhdGVtZW50LXNlcnZpY2UtMSIsInRva2VuaXphdGlvbi1zZXJ2aWNlLTEiLCJ0YXgtc2VydmljZS0xIiwidGFza3Mtc2VydmljZS0xIiwiY2FzaGluZy1zZXJ2aWNlLTEiLCJsb2FuLXNlcnZpY2UtMiIsInh5cC1zZXJ2aWNlLTEiLCJjYXJkcy1zZXJ2aWNlLTEiLCJjYXJkLW1haWwtc2VydmljZS0xIiwicGF5bWVudC1zZXJ2aWNlLTEiLCJjZ2Etc2VydmljZS0xIiwibWlrLXNlcnZpY2UtMSIsIm1pbmljcm0tc2VydmljZS0xIiwia3BpLXNlcnZpY2UtMSIsImFsbG93YW5jZS1zZXJ2aWNlIiwiZm9yZXgtc2VydmljZS0xIiwidXNhLXZpc2EtZmVlLXNlcnZpY2UtMSIsIm5vc3Ryby1zZXJ2aWNlLTEiLCJjYXJkLWltcy1zZXJ2aWNlLTEiLCJjYXJkLWNvbnRyb2xsZXItc2VydmljZS0xIiwidGVuZGVyLXNlcnZpY2UtMSIsImxlZ2FsLXNlcnZpY2UtMSIsImZlZS1zZXJ2aWNlLTIiLCJnb2xkLXNlcnZpY2UtMSIsInRyYW5zZmVyLWludGVybmFsLXNlcnZpY2UtMSIsImRpc3BpdGNoZXItc2VydmljZS0xIiwidGVsbGVyLXNlcnZpY2UtMSIsInRva2VuaXphdGlvbi1zZXJ2aWNlLTEiLCJwbGVkZ2VyZWdpc3Rlci1zZXJ2aWNlLTEiLCJidWxrLXRyYW5zYWN0aW9uLXNlcnZpY2UtMSIsIm9yZ2FuaXphdGlvbi1zZXJ2aWNlLTEiLCJiZWhhdmlvcmFsLXNlcnZpY2UtMiIsImJlaGF2aW9yYWwtc2VydmljZS0xIiwic21zLWJhbmstc2VydmljZS0xIiwiY29ycG9yYXRlcG9ydGFsLXNlcnZpY2UtMSIsImNyZWRpdC1zdGF0ZW1lbnQtc2VydmljZS0xIiwiY3JlZGl0LW92ZXJkdWUtc2VydmljZS0xIiwiZmVlLXNlcnZpY2UtMSIsImtoYW5iYW5rLXFtcy0xIiwicW1zLWNvcmUtc2VydmljZS0xIiwicW1zLXJlcG9ydC1zZXJ2aWNlLTEiLCJyZXF1ZXN0LXNlcnZpY2UtMSIsInJlcG9ydC1zZXJ2aWNlLTIiLCJjZW50cmFsLWFkZHJlc3Mtc2VydmljZS0xIiwic21zd2ViLXNlcnZpY2UtMSIsImdvbGQtc2VydmljZS0xIiwiYmFuY3MtdHJhbnNhY3Rpb24tc2VydmljZS0xIiwiZWJpbGxpbmctc2VydmljZS0xIiwiY2FyZHMtc2VydmljZS0xIiwiY2FyZC1hZGFwdGVyLXNlcnZpY2UtMSIsIm5vdGlmaWNhdGlvbi1zZXJ2aWNlLTEiXSwiZGV2aWNlX2FkZHJlc3MiOiIxMC42LjIxMC4xMDMiLCJleHAiOjI2ODkzNTc2MTUsImxhbmciOiJtbi1NTiIsImlhdCI6MTU4MjM1NTgxNSwianRpIjoiNTM0MGExMTktNDcxOC00YmY0LTg4MjgtODM3M2Q3NmYyOWU0In0.FBr4wLE9LOY4IAlbXgnm-uXJRNyTYWrCoWNH7zQmax3SIxEZzrr5_Ge69xFlh72CaM8d7AxuvDoeGm6lfmNwNQ</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="content-type" elementType="Argument">
            <stringProp name="Argument.name">content-type</stringProp>
            <stringProp name="Argument.value">Application/JSON</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="threadUser" elementType="Argument">
            <stringProp name="Argument.name">threadUser</stringProp>
            <stringProp name="Argument.value">${__P(user,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="threadLoop" elementType="Argument">
            <stringProp name="Argument.name">threadLoop</stringProp>
            <stringProp name="Argument.value">${__P(loop,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${server}</stringProp>
        <stringProp name="HTTPSampler.port">${port}</stringProp>
        <stringProp name="HTTPSampler.protocol">${ssl}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">${jwt}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">content-type</stringProp>
            <stringProp name="Header.value">${content-type}</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="service endpoints" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${threadLoop}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${threadUser}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /nostro/account" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/account</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /nostro/account/{cur}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/account/usd</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/account/bank" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;name&quot;:&quot;Commerz&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/account/bank</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/account/delete" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;account1&quot;: &quot; &quot;,&#xd;
  &quot;account2&quot;: &quot; &quot;,&#xd;
  &quot;bankName&quot;: &quot; &quot;,&#xd;
  &quot;branch&quot;: &quot; &quot;,&#xd;
  &quot;currency&quot;: &quot; &quot;,&#xd;
  &quot;date&quot;: &quot;2021-03-04T02:54:56.956Z&quot;,&#xd;
  &quot;userId&quot;: &quot; &quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/account/delete</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/account/upsert" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;new&quot;: {&#xd;
    &quot;account1&quot;: &quot;50001411200000004&quot;,&#xd;
    &quot;account2&quot;: &quot;3330305&quot;,&#xd;
    &quot;bankName&quot;: &quot;BOM - Current account&quot;,&#xd;
    &quot;branch&quot;: null,&#xd;
    &quot;currency&quot;: &quot;CHF&quot;,&#xd;
    &quot;userId&quot;: null&#xd;
  }&#xd;
  &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/account/upsert</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /nostro/correspondent" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/correspondent</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/order/upsert" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;new&quot;:{&#xd;
	&#xd;
	&quot;createDate&quot;: &quot;2021-03-04&quot;,&#xd;
	&quot;curCode&quot;: &quot;EUR&quot;,&#xd;
	&quot;dealerId&quot;: &quot;18919&quot;,&#xd;
	&quot;edate&quot;: &quot;2021-03-04&quot;,&#xd;
	&quot;fromAccountNum&quot;: &quot;400878551100EUR&quot;,&#xd;
	&quot;fromBankName&quot;: &quot;Commerz&quot;,&#xd;
	&quot;fromKhanAccountNum&quot;: &quot;50002111400000039&quot;,&#xd;
	&quot;managerDate&quot;: &quot;2021-03-04&quot;,&#xd;
	&quot;managerId&quot;: &quot;18919&quot;,&#xd;
	&quot;midOfficer&quot;: null,&#xd;
	&quot;midOfficerDate&quot;: null,&#xd;
	&quot;repNumber&quot;: &quot;REP210304092755&quot;,&#xd;
	&quot;sdate&quot;: &quot;2021-03-04&quot;,&#xd;
	&quot;status&quot;: &quot;WAITING&quot;,&#xd;
	&quot;tbranch&quot;: null,&#xd;
	&quot;tdate&quot;: null,&#xd;
	&quot;toAccountNum&quot;: &quot;BE83301010469415&quot;,&#xd;
	&quot;toBankName&quot;: &quot;ING&quot;,&#xd;
	&quot;toKhanAccountNum&quot;: &quot;50002111400000028&quot;,&#xd;
	&quot;tteller&quot;: null&#xd;
},&#xd;
&quot;old&quot;:{&#xd;
	&#xd;
	&quot;createDate&quot;: &quot;2021-03-04&quot;,&#xd;
	&quot;curCode&quot;: &quot;EUR&quot;,&#xd;
	&quot;dealerId&quot;: &quot;18919&quot;,&#xd;
	&quot;edate&quot;: &quot;2021-03-04&quot;,&#xd;
	&quot;fromAccountNum&quot;: &quot;400878551100EUR&quot;,&#xd;
	&quot;fromBankName&quot;: &quot;Commerz&quot;,&#xd;
	&quot;fromKhanAccountNum&quot;: &quot;50002111400000039&quot;,&#xd;
	&quot;managerDate&quot;: &quot;2021-03-04&quot;,&#xd;
	&quot;managerId&quot;: &quot;18919&quot;,&#xd;
	&quot;midOfficer&quot;: null,&#xd;
	&quot;midOfficerDate&quot;: null,&#xd;
	&quot;repNumber&quot;: &quot;REP210304092755&quot;,&#xd;
	&quot;sdate&quot;: &quot;2021-03-04&quot;,&#xd;
	&quot;status&quot;: &quot;WAITING&quot;,&#xd;
	&quot;tbranch&quot;: null,&#xd;
	&quot;tdate&quot;: null,&#xd;
	&quot;toAccountNum&quot;: &quot;BE83301010469415&quot;,&#xd;
	&quot;toBankName&quot;: &quot;ING&quot;,&#xd;
	&quot;toKhanAccountNum&quot;: &quot;50002111400000028&quot;,&#xd;
	&quot;tteller&quot;: null&#xd;
}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/order/upsert</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/order/confirm" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;domain&quot;: &quot;18919&quot;,&#xd;
	&quot;repNumber&quot;: &quot;REP210304133655&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/order/confirm</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/order/cancel" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;amount&quot;:&quot;5666&quot;,&#xd;
&quot;createDate&quot;:&quot;2020-11-17T04:33:16.145+0000&quot;,&#xd;
&quot;curCode&quot;:&quot;EUR&quot;,&#xd;
&quot;dealerId&quot;:&quot;13680&quot;,&#xd;
&quot;domain&quot;:&quot;18919&quot;,&#xd;
&quot;edate&quot;:&quot;2020-11-17&quot;,&#xd;
&quot;fromAccountNum&quot;:&quot;400878551100EUR&quot;,&#xd;
&quot;fromBankName&quot;:&quot;Commerz&quot;,&#xd;
&quot;fromKhanAccountNum&quot;:&quot;50002111400000039&quot;,&#xd;
&quot;managerDate&quot;:&quot;2020-11-17T04:33:43.761+0000&quot;,&#xd;
&quot;managerId&quot;:&quot;09230&quot;,&#xd;
&quot;midOfficer&quot;:null,&#xd;
&quot;midOfficerDate&quot;:null,&#xd;
&quot;repNumber&quot;:&quot;REP201117123316&quot;,&#xd;
&quot;sdate&quot;:&quot;2020-11-17&quot;,&#xd;
&quot;status&quot;:&quot;WAITING&quot;,&#xd;
&quot;tbranch&quot;:null,&#xd;
&quot;tdate&quot;:null,&#xd;
&quot;toAccountNum&quot;:&quot;400878551100EUR&quot;,&#xd;
&quot;toBankName&quot;:&quot;Commerz&quot;,&#xd;
&quot;toKhanAccountNum&quot;:&quot;50002111400000039&quot;,&#xd;
&quot;tteller&quot;:null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/order/cancel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/aml" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;Commerz&quot;,&#xd;
  &quot;bank&quot;:&quot;Commerz&quot;,&#xd;
  &quot;date&quot;: &quot;2021-03-04T02:54:56.956Z&quot;&#xd;
  &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/aml</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/list/accounts" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;account&quot;:&quot;50001411200000004&quot;,&#xd;
	&quot;currency&quot;:&quot;CHF&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/list/accounts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /nostro/list/banks" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/list/banks</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /nostro/order" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/order</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /nostro/order/{domain}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/order/18919</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/order/delete" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;amount&quot;:&quot;5666&quot;,&#xd;
&quot;createDate&quot;:&quot;2020-11-17T04:33:16.145+0000&quot;,&#xd;
&quot;curCode&quot;:&quot;EUR&quot;,&#xd;
&quot;dealerId&quot;:&quot;13680&quot;,&#xd;
&quot;domain&quot;:&quot;18919&quot;,&#xd;
&quot;edate&quot;:&quot;2020-11-17&quot;,&#xd;
&quot;fromAccountNum&quot;:&quot;400878551100EUR&quot;,&#xd;
&quot;fromBankName&quot;:&quot;Commerz&quot;,&#xd;
&quot;fromKhanAccountNum&quot;:&quot;50002111400000039&quot;,&#xd;
&quot;managerDate&quot;:&quot;2020-11-17T04:33:43.761+0000&quot;,&#xd;
&quot;managerId&quot;:&quot;09230&quot;,&#xd;
&quot;midOfficer&quot;:null,&#xd;
&quot;midOfficerDate&quot;:null,&#xd;
&quot;repNumber&quot;:&quot;REP201117123316&quot;,&#xd;
&quot;sdate&quot;:&quot;2020-11-17&quot;,&#xd;
&quot;status&quot;:&quot;WAITING&quot;,&#xd;
&quot;tbranch&quot;:null,&#xd;
&quot;tdate&quot;:null,&#xd;
&quot;toAccountNum&quot;:&quot;400878551100EUR&quot;,&#xd;
&quot;toBankName&quot;:&quot;Commerz&quot;,&#xd;
&quot;toKhanAccountNum&quot;:&quot;50002111400000039&quot;,&#xd;
&quot;tteller&quot;:null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/order/delete</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /nostro/order/mid" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/order/mid</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/order/mid/confirm" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;domain&quot;: &quot;18919&quot;,&#xd;
	&quot;repNumber&quot;: &quot;REP210304092755&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/order/mid/confirm</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /nostro/order/mid/confirmed" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/order/mid/confirmed</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/reference" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;branch&quot;: &quot;5000&quot;,&#xd;
  &quot;fromAccount&quot;: &quot;50001411200000004&quot;,&#xd;
  &quot;systemType&quot;: &quot;string&quot;,&#xd;
  &quot;teller&quot;: &quot;18919&quot;,&#xd;
  &quot;terminal&quot;: &quot;string&quot;,&#xd;
  &quot;toAmount&quot;: 10,&#xd;
  &quot;toCurrency&quot;: &quot;MNT&quot;,&#xd;
  &quot;type&quot;: &quot;string&quot;,&#xd;
  &quot;valueDate&quot;: &quot;string&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/reference</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /nostro/report/{flag}/{sDate}/{eDate}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/report/1/20210304/20210304</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /nostro/transfers/{param}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/transfers/all</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /nostro/transfers/approved/{param}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/transfers/approved/all</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/transfers/approve" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;tranStatus&quot;: &quot;APPR&quot;,&#xd;
        &quot;reference&quot;: &quot;1905070001911370&quot;,&#xd;
        &quot;recvBankCode&quot;: &quot;COBADEFF&quot;,&#xd;
        &quot;relReference&quot;: &quot;190904163121&quot;,&#xd;
        &quot;fromAmount&quot;: 3524000,&#xd;
        &quot;valueDate&quot;: &quot;09042019&quot;,&#xd;
        &quot;msgType&quot;: &quot;MT202&quot;,&#xd;
        &quot;systemType&quot;: &quot;GEN&quot;,&#xd;
        &quot;promo&quot;: &quot;NF&quot;,&#xd;
        &quot;amount&quot;: 3524000,&#xd;
        &quot;toRate&quot;: 2934.32,&#xd;
        &quot;fromRate&quot;: 2934.32,&#xd;
        &quot;fromCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;toCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;fromAccount&quot;: &quot;50002111400000039&quot;,&#xd;
        &quot;toAccount&quot;: &quot;50002111400000028&quot;,&#xd;
        &quot;ordInstOpt&quot;: &quot;A&quot;,&#xd;
        &quot;ordInstPartyId&quot;: null,&#xd;
        &quot;ordInstBIC&quot;: &quot;AGMOMNUB&quot;,&#xd;
        &quot;ordInstDtls1&quot;: null,&#xd;
        &quot;ordInstDtls2&quot;: null,&#xd;
        &quot;ordInstDtls3&quot;: null,&#xd;
        &quot;ordInstDtls4&quot;: null,&#xd;
        &quot;recvCorrOpt&quot;: &quot;&quot;,&#xd;
        &quot;recvCorrPartyId&quot;: null,&#xd;
        &quot;recvCorrBIC&quot;: null,&#xd;
        &quot;recvCorrLocation&quot;: null,&#xd;
        &quot;recvCorrDtls1&quot;: null,&#xd;
        &quot;recvCorrDtls2&quot;: null,&#xd;
        &quot;recvCorrDtls3&quot;: null,&#xd;
        &quot;recvCorrDtls4&quot;: null,&#xd;
        &quot;benInstOpt&quot;: &quot;A&quot;,&#xd;
        &quot;benInstPartyId&quot;: &quot;301010469415&quot;,&#xd;
        &quot;benInstBIC&quot;: &quot;AGMOMNUB&quot;,&#xd;
        &quot;benInstDtls1&quot;: null,&#xd;
        &quot;benInstDtls2&quot;: null,&#xd;
        &quot;benInstDtls3&quot;: null,&#xd;
        &quot;benInstDtls4&quot;: null,&#xd;
        &quot;sendCorrOpt&quot;: &quot;&quot;,&#xd;
        &quot;sendCorrPartyId&quot;: null,&#xd;
        &quot;sendCorrBIC&quot;: null,&#xd;
        &quot;sendCorrLocation&quot;: null,&#xd;
        &quot;sendCorrDtls1&quot;: null,&#xd;
        &quot;sendCorrDtls2&quot;: null,&#xd;
        &quot;sendCorrDtls3&quot;: null,&#xd;
        &quot;sendCorrDtls4&quot;: null,&#xd;
        &quot;interInstOpt&quot;: &quot;&quot;,&#xd;
        &quot;interInstPartyId&quot;: null,&#xd;
        &quot;interInstBIC&quot;: null,&#xd;
        &quot;interInstDtls1&quot;: null,&#xd;
        &quot;interInstDtls2&quot;: null,&#xd;
        &quot;interInstDtls3&quot;: null,&#xd;
        &quot;interInstDtls4&quot;: null,&#xd;
        &quot;acctInstOpt&quot;: &quot;A&quot;,&#xd;
        &quot;acctInstPartyId&quot;: null,&#xd;
        &quot;acctInstBIC&quot;: &quot;BBRUBEBB010&quot;,&#xd;
        &quot;acctInstLocation&quot;: null,&#xd;
        &quot;acctInstDtls1&quot;: null,&#xd;
        &quot;acctInstDtls2&quot;: null,&#xd;
        &quot;acctInstDtls3&quot;: null,&#xd;
        &quot;acctInstDtls4&quot;: null,&#xd;
        &quot;sendRecvInfo1&quot;: null,&#xd;
        &quot;sendRecvInfo2&quot;: null,&#xd;
        &quot;sendRecvInfo3&quot;: null,&#xd;
        &quot;sendRecvInfo4&quot;: null,&#xd;
        &quot;sendRecvInfo5&quot;: null,&#xd;
        &quot;sendRecvInfo6&quot;: null,&#xd;
        &quot;createDate&quot;: &quot;2019-09-04&quot;,&#xd;
        &quot;approveDate&quot;: &quot;2019-09-04&quot;,&#xd;
        &quot;sendDate&quot;: null,&#xd;
        &quot;journal&quot;: null,&#xd;
        &quot;teller&quot;: &quot;18919&quot;,&#xd;
        &quot;branch&quot;: &quot;5003&quot;,&#xd;
        &quot;repNumber&quot;: &quot;REP190904163121&quot;&#xd;
    }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/transfers/approve</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/transfers/approved/send" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;tranStatus&quot;: &quot;SENT&quot;,&#xd;
        &quot;reference&quot;: &quot;2011220003715290&quot;,&#xd;
        &quot;recvBankCode&quot;: &quot;COBADEFF&quot;,&#xd;
        &quot;relReference&quot;: &quot;201127195000&quot;,&#xd;
        &quot;fromAmount&quot;: 989,&#xd;
        &quot;valueDate&quot;: &quot;11272020&quot;,&#xd;
        &quot;msgType&quot;: &quot;MT202&quot;,&#xd;
        &quot;systemType&quot;: &quot;GEN&quot;,&#xd;
        &quot;promo&quot;: &quot;NF&quot;,&#xd;
        &quot;amount&quot;: 989,&#xd;
        &quot;toRate&quot;: 3400.29,&#xd;
        &quot;fromRate&quot;: 3400.29,&#xd;
        &quot;fromCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;toCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;fromAccount&quot;: &quot;50002111400000039&quot;,&#xd;
        &quot;toAccount&quot;: &quot;52082111400000006&quot;,&#xd;
        &quot;ordInstOpt&quot;: &quot;A&quot;,&#xd;
        &quot;ordInstPartyId&quot;: null,&#xd;
        &quot;ordInstBIC&quot;: &quot;AGMOMNUB&quot;,&#xd;
        &quot;ordInstDtls1&quot;: null,&#xd;
        &quot;ordInstDtls2&quot;: null,&#xd;
        &quot;ordInstDtls3&quot;: null,&#xd;
        &quot;ordInstDtls4&quot;: null,&#xd;
        &quot;recvCorrOpt&quot;: &quot;&quot;,&#xd;
        &quot;recvCorrPartyId&quot;: null,&#xd;
        &quot;recvCorrBIC&quot;: null,&#xd;
        &quot;recvCorrLocation&quot;: null,&#xd;
        &quot;recvCorrDtls1&quot;: null,&#xd;
        &quot;recvCorrDtls2&quot;: null,&#xd;
        &quot;recvCorrDtls3&quot;: null,&#xd;
        &quot;recvCorrDtls4&quot;: null,&#xd;
        &quot;benInstOpt&quot;: &quot;A&quot;,&#xd;
        &quot;benInstPartyId&quot;: null,&#xd;
        &quot;benInstBIC&quot;: &quot;AGMOMNUB&quot;,&#xd;
        &quot;benInstDtls1&quot;: null,&#xd;
        &quot;benInstDtls2&quot;: null,&#xd;
        &quot;benInstDtls3&quot;: null,&#xd;
        &quot;benInstDtls4&quot;: null,&#xd;
        &quot;sendCorrOpt&quot;: &quot;&quot;,&#xd;
        &quot;sendCorrPartyId&quot;: null,&#xd;
        &quot;sendCorrBIC&quot;: null,&#xd;
        &quot;sendCorrLocation&quot;: null,&#xd;
        &quot;sendCorrDtls1&quot;: null,&#xd;
        &quot;sendCorrDtls2&quot;: null,&#xd;
        &quot;sendCorrDtls3&quot;: null,&#xd;
        &quot;sendCorrDtls4&quot;: null,&#xd;
        &quot;interInstOpt&quot;: &quot;&quot;,&#xd;
        &quot;interInstPartyId&quot;: null,&#xd;
        &quot;interInstBIC&quot;: null,&#xd;
        &quot;interInstDtls1&quot;: null,&#xd;
        &quot;interInstDtls2&quot;: null,&#xd;
        &quot;interInstDtls3&quot;: null,&#xd;
        &quot;interInstDtls4&quot;: null,&#xd;
        &quot;acctInstOpt&quot;: &quot;A&quot;,&#xd;
        &quot;acctInstPartyId&quot;: null,&#xd;
        &quot;acctInstBIC&quot;: &quot;frdg&quot;,&#xd;
        &quot;acctInstLocation&quot;: null,&#xd;
        &quot;acctInstDtls1&quot;: null,&#xd;
        &quot;acctInstDtls2&quot;: null,&#xd;
        &quot;acctInstDtls3&quot;: null,&#xd;
        &quot;acctInstDtls4&quot;: null,&#xd;
        &quot;sendRecvInfo1&quot;: null,&#xd;
        &quot;sendRecvInfo2&quot;: null,&#xd;
        &quot;sendRecvInfo3&quot;: null,&#xd;
        &quot;sendRecvInfo4&quot;: null,&#xd;
        &quot;sendRecvInfo5&quot;: null,&#xd;
        &quot;sendRecvInfo6&quot;: null,&#xd;
        &quot;createDate&quot;: &quot;2020-11-27&quot;,&#xd;
        &quot;approveDate&quot;: &quot;2020-11-27&quot;,&#xd;
        &quot;sendDate&quot;: null,&#xd;
        &quot;journal&quot;: 273049,&#xd;
        &quot;teller&quot;: &quot;90019&quot;,&#xd;
        &quot;branch&quot;: &quot;5000&quot;,&#xd;
        &quot;repNumber&quot;: &quot;REP201127195000&quot;&#xd;
    }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/transfers/approved/send</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/transfers/cancel" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;tranStatus&quot;: &quot;APPR&quot;,&#xd;
        &quot;reference&quot;: &quot;1905070001911370&quot;,&#xd;
        &quot;recvBankCode&quot;: &quot;COBADEFF&quot;,&#xd;
        &quot;relReference&quot;: &quot;190904163121&quot;,&#xd;
        &quot;fromAmount&quot;: 3524000,&#xd;
        &quot;valueDate&quot;: &quot;09042019&quot;,&#xd;
        &quot;msgType&quot;: &quot;MT202&quot;,&#xd;
        &quot;systemType&quot;: &quot;GEN&quot;,&#xd;
        &quot;promo&quot;: &quot;NF&quot;,&#xd;
        &quot;amount&quot;: 3524000,&#xd;
        &quot;toRate&quot;: 2934.32,&#xd;
        &quot;fromRate&quot;: 2934.32,&#xd;
        &quot;fromCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;toCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;fromAccount&quot;: &quot;50002111400000039&quot;,&#xd;
        &quot;toAccount&quot;: &quot;50002111400000028&quot;,&#xd;
        &quot;ordInstOpt&quot;: &quot;A&quot;,&#xd;
        &quot;ordInstPartyId&quot;: null,&#xd;
        &quot;ordInstBIC&quot;: &quot;AGMOMNUB&quot;,&#xd;
        &quot;ordInstDtls1&quot;: null,&#xd;
        &quot;ordInstDtls2&quot;: null,&#xd;
        &quot;ordInstDtls3&quot;: null,&#xd;
        &quot;ordInstDtls4&quot;: null,&#xd;
        &quot;recvCorrOpt&quot;: &quot;&quot;,&#xd;
        &quot;recvCorrPartyId&quot;: null,&#xd;
        &quot;recvCorrBIC&quot;: null,&#xd;
        &quot;recvCorrLocation&quot;: null,&#xd;
        &quot;recvCorrDtls1&quot;: null,&#xd;
        &quot;recvCorrDtls2&quot;: null,&#xd;
        &quot;recvCorrDtls3&quot;: null,&#xd;
        &quot;recvCorrDtls4&quot;: null,&#xd;
        &quot;benInstOpt&quot;: &quot;A&quot;,&#xd;
        &quot;benInstPartyId&quot;: &quot;301010469415&quot;,&#xd;
        &quot;benInstBIC&quot;: &quot;AGMOMNUB&quot;,&#xd;
        &quot;benInstDtls1&quot;: null,&#xd;
        &quot;benInstDtls2&quot;: null,&#xd;
        &quot;benInstDtls3&quot;: null,&#xd;
        &quot;benInstDtls4&quot;: null,&#xd;
        &quot;sendCorrOpt&quot;: &quot;&quot;,&#xd;
        &quot;sendCorrPartyId&quot;: null,&#xd;
        &quot;sendCorrBIC&quot;: null,&#xd;
        &quot;sendCorrLocation&quot;: null,&#xd;
        &quot;sendCorrDtls1&quot;: null,&#xd;
        &quot;sendCorrDtls2&quot;: null,&#xd;
        &quot;sendCorrDtls3&quot;: null,&#xd;
        &quot;sendCorrDtls4&quot;: null,&#xd;
        &quot;interInstOpt&quot;: &quot;&quot;,&#xd;
        &quot;interInstPartyId&quot;: null,&#xd;
        &quot;interInstBIC&quot;: null,&#xd;
        &quot;interInstDtls1&quot;: null,&#xd;
        &quot;interInstDtls2&quot;: null,&#xd;
        &quot;interInstDtls3&quot;: null,&#xd;
        &quot;interInstDtls4&quot;: null,&#xd;
        &quot;acctInstOpt&quot;: &quot;A&quot;,&#xd;
        &quot;acctInstPartyId&quot;: null,&#xd;
        &quot;acctInstBIC&quot;: &quot;BBRUBEBB010&quot;,&#xd;
        &quot;acctInstLocation&quot;: null,&#xd;
        &quot;acctInstDtls1&quot;: null,&#xd;
        &quot;acctInstDtls2&quot;: null,&#xd;
        &quot;acctInstDtls3&quot;: null,&#xd;
        &quot;acctInstDtls4&quot;: null,&#xd;
        &quot;sendRecvInfo1&quot;: null,&#xd;
        &quot;sendRecvInfo2&quot;: null,&#xd;
        &quot;sendRecvInfo3&quot;: null,&#xd;
        &quot;sendRecvInfo4&quot;: null,&#xd;
        &quot;sendRecvInfo5&quot;: null,&#xd;
        &quot;sendRecvInfo6&quot;: null,&#xd;
        &quot;createDate&quot;: &quot;2019-09-04&quot;,&#xd;
        &quot;approveDate&quot;: &quot;2019-09-04&quot;,&#xd;
        &quot;sendDate&quot;: null,&#xd;
        &quot;journal&quot;: null,&#xd;
        &quot;teller&quot;: &quot;18919&quot;,&#xd;
        &quot;branch&quot;: &quot;5003&quot;,&#xd;
        &quot;repNumber&quot;: &quot;REP190904163121&quot;&#xd;
    }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/transfers/cancel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /nostro/transfers/cancelled" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/transfers/cancelled</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /nostro/transfers/completed" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/transfers/completed</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/transfers/create" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;tranStatus&quot;: &quot;SENT&quot;,&#xd;
        &quot;reference&quot;: &quot;2011220003715290&quot;,&#xd;
        &quot;recvBankCode&quot;: &quot;COBADEFF&quot;,&#xd;
        &quot;relReference&quot;: &quot;201127195000&quot;,&#xd;
        &quot;fromAmount&quot;: 989,&#xd;
        &quot;valueDate&quot;: &quot;11272020&quot;,&#xd;
        &quot;msgType&quot;: &quot;MT202&quot;,&#xd;
        &quot;systemType&quot;: &quot;GEN&quot;,&#xd;
        &quot;promo&quot;: &quot;NF&quot;,&#xd;
        &quot;amount&quot;: 989,&#xd;
        &quot;toRate&quot;: 3400.29,&#xd;
        &quot;fromRate&quot;: 3400.29,&#xd;
        &quot;fromCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;toCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;fromAccount&quot;: &quot;50002111400000039&quot;,&#xd;
        &quot;toAccount&quot;: &quot;52082111400000006&quot;,&#xd;
        &quot;ordInstOpt&quot;: &quot;A&quot;,&#xd;
        &quot;ordInstPartyId&quot;: null,&#xd;
        &quot;ordInstBIC&quot;: &quot;AGMOMNUB&quot;,&#xd;
        &quot;ordInstDtls1&quot;: null,&#xd;
        &quot;ordInstDtls2&quot;: null,&#xd;
        &quot;ordInstDtls3&quot;: null,&#xd;
        &quot;ordInstDtls4&quot;: null,&#xd;
        &quot;recvCorrOpt&quot;: &quot;&quot;,&#xd;
        &quot;recvCorrPartyId&quot;: null,&#xd;
        &quot;recvCorrBIC&quot;: null,&#xd;
        &quot;recvCorrLocation&quot;: null,&#xd;
        &quot;recvCorrDtls1&quot;: null,&#xd;
        &quot;recvCorrDtls2&quot;: null,&#xd;
        &quot;recvCorrDtls3&quot;: null,&#xd;
        &quot;recvCorrDtls4&quot;: null,&#xd;
        &quot;benInstOpt&quot;: &quot;A&quot;,&#xd;
        &quot;benInstPartyId&quot;: null,&#xd;
        &quot;benInstBIC&quot;: &quot;AGMOMNUB&quot;,&#xd;
        &quot;benInstDtls1&quot;: null,&#xd;
        &quot;benInstDtls2&quot;: null,&#xd;
        &quot;benInstDtls3&quot;: null,&#xd;
        &quot;benInstDtls4&quot;: null,&#xd;
        &quot;sendCorrOpt&quot;: &quot;&quot;,&#xd;
        &quot;sendCorrPartyId&quot;: null,&#xd;
        &quot;sendCorrBIC&quot;: null,&#xd;
        &quot;sendCorrLocation&quot;: null,&#xd;
        &quot;sendCorrDtls1&quot;: null,&#xd;
        &quot;sendCorrDtls2&quot;: null,&#xd;
        &quot;sendCorrDtls3&quot;: null,&#xd;
        &quot;sendCorrDtls4&quot;: null,&#xd;
        &quot;interInstOpt&quot;: &quot;&quot;,&#xd;
        &quot;interInstPartyId&quot;: null,&#xd;
        &quot;interInstBIC&quot;: null,&#xd;
        &quot;interInstDtls1&quot;: null,&#xd;
        &quot;interInstDtls2&quot;: null,&#xd;
        &quot;interInstDtls3&quot;: null,&#xd;
        &quot;interInstDtls4&quot;: null,&#xd;
        &quot;acctInstOpt&quot;: &quot;A&quot;,&#xd;
        &quot;acctInstPartyId&quot;: null,&#xd;
        &quot;acctInstBIC&quot;: &quot;frdg&quot;,&#xd;
        &quot;acctInstLocation&quot;: null,&#xd;
        &quot;acctInstDtls1&quot;: null,&#xd;
        &quot;acctInstDtls2&quot;: null,&#xd;
        &quot;acctInstDtls3&quot;: null,&#xd;
        &quot;acctInstDtls4&quot;: null,&#xd;
        &quot;sendRecvInfo1&quot;: null,&#xd;
        &quot;sendRecvInfo2&quot;: null,&#xd;
        &quot;sendRecvInfo3&quot;: null,&#xd;
        &quot;sendRecvInfo4&quot;: null,&#xd;
        &quot;sendRecvInfo5&quot;: null,&#xd;
        &quot;sendRecvInfo6&quot;: null,&#xd;
        &quot;createDate&quot;: &quot;2020-11-27&quot;,&#xd;
        &quot;approveDate&quot;: &quot;2020-11-27&quot;,&#xd;
        &quot;sendDate&quot;: null,&#xd;
        &quot;journal&quot;: 273049,&#xd;
        &quot;teller&quot;: &quot;90019&quot;,&#xd;
        &quot;branch&quot;: &quot;5000&quot;,&#xd;
        &quot;repNumber&quot;: &quot;REP201127195000&quot;&#xd;
    }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/transfers/create</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /nostro/correspondentbanks" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/correspondentbanks</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/correspondentbanks/create" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">  {&#xd;
        &quot;id&quot;: &quot;1&quot;,&#xd;
        &quot;sort&quot;: ${rand},&#xd;
        &quot;cor1&quot;: &quot;Balance of BOM 1120, 1121&quot;,&#xd;
        &quot;cor2&quot;: &quot;Current account&quot;,&#xd;
        &quot;mnt&quot;: &quot;50000011200000008&quot;,&#xd;
        &quot;usd&quot;: &quot;50001011200000000&quot;,&#xd;
        &quot;eur&quot;: &quot;50002111200000003&quot;,&#xd;
        &quot;jpy&quot;: &quot;50001311200000003&quot;,&#xd;
        &quot;gbp&quot;: &quot;50001211200000002&quot;,&#xd;
        &quot;chf&quot;: &quot;50001411200000004&quot;,&#xd;
        &quot;cny&quot;: &quot;50002011200000002&quot;,&#xd;
        &quot;rub&quot;: null,&#xd;
        &quot;aud&quot;: null,&#xd;
        &quot;cad&quot;: null,&#xd;
        &quot;krw&quot;: null,&#xd;
        &quot;sgd&quot;: null,&#xd;
        &quot;nzd&quot;: null,&#xd;
        &quot;hkd&quot;: null,&#xd;
        &quot;xau&quot;: &quot;&quot;,&#xd;
        &quot;oldSort&quot;: 101&#xd;
    }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/correspondentbanks/create</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
            <stringProp name="maximumValue">999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat"></stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">rand</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/correspondentbanks/update" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">  {&#xd;
        &quot;id&quot;: &quot;1&quot;,&#xd;
        &quot;sort&quot;: 102,&#xd;
        &quot;cor1&quot;: &quot;Balance of BOM 1120, 1121&quot;,&#xd;
        &quot;cor2&quot;: &quot;Current account&quot;,&#xd;
        &quot;mnt&quot;: &quot;50000011200000008&quot;,&#xd;
        &quot;usd&quot;: &quot;50001011200000000&quot;,&#xd;
        &quot;eur&quot;: &quot;50002111200000003&quot;,&#xd;
        &quot;jpy&quot;: &quot;50001311200000003&quot;,&#xd;
        &quot;gbp&quot;: &quot;50001211200000002&quot;,&#xd;
        &quot;chf&quot;: &quot;50001411200000004&quot;,&#xd;
        &quot;cny&quot;: &quot;50002011200000002&quot;,&#xd;
        &quot;rub&quot;: null,&#xd;
        &quot;aud&quot;: null,&#xd;
        &quot;cad&quot;: null,&#xd;
        &quot;krw&quot;: null,&#xd;
        &quot;sgd&quot;: null,&#xd;
        &quot;nzd&quot;: null,&#xd;
        &quot;hkd&quot;: null,&#xd;
        &quot;xau&quot;: &quot;&quot;,&#xd;
        &quot;oldSort&quot;: 102&#xd;
    }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/correspondentbanks/update</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /nostro/correspondentbanks/delete" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">  {&#xd;
        &quot;id&quot;: &quot;1&quot;,&#xd;
        &quot;sort&quot;: 102,&#xd;
        &quot;cor1&quot;: &quot;Balance of BOM 1120, 1121&quot;,&#xd;
        &quot;cor2&quot;: &quot;Current account&quot;,&#xd;
        &quot;mnt&quot;: &quot;50000011200000008&quot;,&#xd;
        &quot;usd&quot;: &quot;50001011200000000&quot;,&#xd;
        &quot;eur&quot;: &quot;50002111200000003&quot;,&#xd;
        &quot;jpy&quot;: &quot;50001311200000003&quot;,&#xd;
        &quot;gbp&quot;: &quot;50001211200000002&quot;,&#xd;
        &quot;chf&quot;: &quot;50001411200000004&quot;,&#xd;
        &quot;cny&quot;: &quot;50002011200000002&quot;,&#xd;
        &quot;rub&quot;: null,&#xd;
        &quot;aud&quot;: null,&#xd;
        &quot;cad&quot;: null,&#xd;
        &quot;krw&quot;: null,&#xd;
        &quot;sgd&quot;: null,&#xd;
        &quot;nzd&quot;: null,&#xd;
        &quot;hkd&quot;: null,&#xd;
        &quot;xau&quot;: &quot;&quot;,&#xd;
        &quot;oldSort&quot;: 102&#xd;
    }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nostro/correspondentbanks/delete</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
